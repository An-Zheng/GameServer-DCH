// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: allmsg.proto

#include "allmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_allmsg_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_allmsg_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerList;
}  // namespace protobuf_allmsg_2eproto
namespace pb {
class LoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Login>
      _instance;
} _Login_default_instance_;
class RequestListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestList>
      _instance;
} _RequestList_default_instance_;
class PlayerListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerList>
      _instance;
} _PlayerList_default_instance_;
class LoginBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginBack>
      _instance;
} _LoginBack_default_instance_;
class GameServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameServerInfo>
      _instance;
} _GameServerInfo_default_instance_;
class GameServerInfoBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameServerInfoBack>
      _instance;
} _GameServerInfoBack_default_instance_;
class RequestIPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestIP>
      _instance;
} _RequestIP_default_instance_;
class ResponseIPDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResponseIP>
      _instance;
} _ResponseIP_default_instance_;
class AttackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttackRequest>
      _instance;
} _AttackRequest_default_instance_;
class AttackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttackResponse>
      _instance;
} _AttackResponse_default_instance_;
class ChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chat>
      _instance;
} _Chat_default_instance_;
class ChatBackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChatBack>
      _instance;
} _ChatBack_default_instance_;
class ReceiveChatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReceiveChat>
      _instance;
} _ReceiveChat_default_instance_;
}  // namespace pb
namespace protobuf_allmsg_2eproto {
static void InitDefaultsLogin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Login_default_instance_;
    new (ptr) ::pb::Login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Login::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Login =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogin}, {}};

static void InitDefaultsRequestList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RequestList_default_instance_;
    new (ptr) ::pb::RequestList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RequestList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestList}, {}};

static void InitDefaultsPlayerList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PlayerList_default_instance_;
    new (ptr) ::pb::PlayerList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::PlayerList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerList}, {}};

static void InitDefaultsLoginBack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_LoginBack_default_instance_;
    new (ptr) ::pb::LoginBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::LoginBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoginBack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoginBack}, {
      &protobuf_allmsg_2eproto::scc_info_PlayerList.base,}};

static void InitDefaultsGameServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GameServerInfo_default_instance_;
    new (ptr) ::pb::GameServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GameServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameServerInfo}, {}};

static void InitDefaultsGameServerInfoBack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GameServerInfoBack_default_instance_;
    new (ptr) ::pb::GameServerInfoBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GameServerInfoBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameServerInfoBack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameServerInfoBack}, {}};

static void InitDefaultsRequestIP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RequestIP_default_instance_;
    new (ptr) ::pb::RequestIP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RequestIP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestIP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestIP}, {}};

static void InitDefaultsResponseIP() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ResponseIP_default_instance_;
    new (ptr) ::pb::ResponseIP();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ResponseIP::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResponseIP =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponseIP}, {}};

static void InitDefaultsAttackRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_AttackRequest_default_instance_;
    new (ptr) ::pb::AttackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::AttackRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttackRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttackRequest}, {}};

static void InitDefaultsAttackResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_AttackResponse_default_instance_;
    new (ptr) ::pb::AttackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::AttackResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttackResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttackResponse}, {}};

static void InitDefaultsChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Chat_default_instance_;
    new (ptr) ::pb::Chat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Chat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Chat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChat}, {}};

static void InitDefaultsChatBack() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ChatBack_default_instance_;
    new (ptr) ::pb::ChatBack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ChatBack::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChatBack =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChatBack}, {}};

static void InitDefaultsReceiveChat() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReceiveChat_default_instance_;
    new (ptr) ::pb::ReceiveChat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReceiveChat::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReceiveChat =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReceiveChat}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Login.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginBack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameServerInfoBack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestIP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResponseIP.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttackRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttackResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Chat.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChatBack.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReceiveChat.base);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Login, playername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RequestList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RequestList, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::PlayerList, playernamelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::LoginBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::LoginBack, succ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::LoginBack, playerlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfo, curload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfo, maxload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfo, ipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfo, portnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfoBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GameServerInfoBack, succ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RequestIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RequestIP, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ResponseIP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ResponseIP, ipaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ResponseIP, portnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AttackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AttackRequest, offendername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AttackRequest, attackername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AttackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::AttackResponse, issucc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Chat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Chat, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Chat, receivername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Chat, sendername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChatBack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ChatBack, succ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ReceiveChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ReceiveChat, sendername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::ReceiveChat, msg_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::Login)},
  { 6, -1, sizeof(::pb::RequestList)},
  { 12, -1, sizeof(::pb::PlayerList)},
  { 18, -1, sizeof(::pb::LoginBack)},
  { 25, -1, sizeof(::pb::GameServerInfo)},
  { 34, -1, sizeof(::pb::GameServerInfoBack)},
  { 40, -1, sizeof(::pb::RequestIP)},
  { 46, -1, sizeof(::pb::ResponseIP)},
  { 53, -1, sizeof(::pb::AttackRequest)},
  { 60, -1, sizeof(::pb::AttackResponse)},
  { 66, -1, sizeof(::pb::Chat)},
  { 74, -1, sizeof(::pb::ChatBack)},
  { 80, -1, sizeof(::pb::ReceiveChat)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RequestList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_PlayerList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_LoginBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GameServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GameServerInfoBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RequestIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ResponseIP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_AttackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_AttackResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Chat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ChatBack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_ReceiveChat_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "allmsg.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014allmsg.proto\022\002pb\"\033\n\005Login\022\022\n\nplayernam"
      "e\030\001 \001(\t\"\031\n\013RequestList\022\n\n\002id\030\001 \001(\005\"$\n\nPl"
      "ayerList\022\026\n\016playernamelist\030\001 \003(\t\"=\n\tLogi"
      "nBack\022\014\n\004succ\030\001 \001(\005\022\"\n\nplayerlist\030\002 \001(\0132"
      "\016.pb.PlayerList\"V\n\016GameServerInfo\022\017\n\007cur"
      "load\030\001 \001(\005\022\017\n\007maxload\030\002 \001(\005\022\021\n\tIPaddress"
      "\030\003 \001(\t\022\017\n\007portNum\030\004 \001(\005\"\"\n\022GameServerInf"
      "oBack\022\014\n\004succ\030\001 \001(\005\"\027\n\tRequestIP\022\n\n\002id\030\001"
      " \001(\005\"0\n\nResponseIP\022\021\n\tIPaddress\030\001 \001(\t\022\017\n"
      "\007portNum\030\002 \001(\005\";\n\rAttackRequest\022\024\n\014offen"
      "dername\030\001 \001(\t\022\024\n\014attackername\030\002 \001(\t\" \n\016A"
      "ttackResponse\022\016\n\006issucc\030\001 \001(\005\"=\n\004Chat\022\013\n"
      "\003msg\030\001 \001(\t\022\024\n\014receivername\030\002 \001(\t\022\022\n\nsend"
      "ername\030\003 \001(\t\"\030\n\010ChatBack\022\014\n\004succ\030\001 \001(\005\"."
      "\n\013ReceiveChat\022\022\n\nsendername\030\001 \001(\t\022\013\n\003msg"
      "\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 614);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "allmsg.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_allmsg_2eproto
namespace pb {

// ===================================================================

void Login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login::Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_Login.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Login)
}
Login::Login(const Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.Login)
}

void Login::SharedCtor() {
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login::~Login() {
  // @@protoc_insertion_point(destructor:pb.Login)
  SharedDtor();
}

void Login::SharedDtor() {
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Login::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login& Login::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_Login.base);
  return *internal_default_instance();
}


void Login::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Login)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string playername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playername().data(), static_cast<int>(this->playername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Login.playername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Login)
  return false;
#undef DO_
}

void Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string playername = 1;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Login.playername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Login)
}

::google::protobuf::uint8* Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string playername = 1;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playername().data(), static_cast<int>(this->playername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Login.playername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Login)
  return target;
}

size_t Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Login)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string playername = 1;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Login)
  GOOGLE_DCHECK_NE(&from, this);
  const Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Login)
    MergeFrom(*source);
  }
}

void Login::MergeFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
}

void Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login::CopyFrom(const Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login::IsInitialized() const {
  return true;
}

void Login::Swap(Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login::InternalSwap(Login* other) {
  using std::swap;
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Login::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestList::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestList::RequestList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_RequestList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RequestList)
}
RequestList::RequestList(const RequestList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.RequestList)
}

void RequestList::SharedCtor() {
  id_ = 0;
}

RequestList::~RequestList() {
  // @@protoc_insertion_point(destructor:pb.RequestList)
  SharedDtor();
}

void RequestList::SharedDtor() {
}

void RequestList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestList::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestList& RequestList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_RequestList.base);
  return *internal_default_instance();
}


void RequestList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RequestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

bool RequestList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RequestList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RequestList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RequestList)
  return false;
#undef DO_
}

void RequestList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RequestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RequestList)
}

::google::protobuf::uint8* RequestList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RequestList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RequestList)
  return target;
}

size_t RequestList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RequestList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RequestList)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RequestList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RequestList)
    MergeFrom(*source);
  }
}

void RequestList::MergeFrom(const RequestList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RequestList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RequestList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RequestList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestList::CopyFrom(const RequestList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RequestList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestList::IsInitialized() const {
  return true;
}

void RequestList::Swap(RequestList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestList::InternalSwap(RequestList* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestList::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerList::kPlayernamelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerList::PlayerList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_PlayerList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.PlayerList)
}
PlayerList::PlayerList(const PlayerList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playernamelist_(from.playernamelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.PlayerList)
}

void PlayerList::SharedCtor() {
}

PlayerList::~PlayerList() {
  // @@protoc_insertion_point(destructor:pb.PlayerList)
  SharedDtor();
}

void PlayerList::SharedDtor() {
}

void PlayerList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerList::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerList& PlayerList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_PlayerList.base);
  return *internal_default_instance();
}


void PlayerList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playernamelist_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.PlayerList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string playernamelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_playernamelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playernamelist(this->playernamelist_size() - 1).data(),
            static_cast<int>(this->playernamelist(this->playernamelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.PlayerList.playernamelist"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.PlayerList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.PlayerList)
  return false;
#undef DO_
}

void PlayerList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string playernamelist = 1;
  for (int i = 0, n = this->playernamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playernamelist(i).data(), static_cast<int>(this->playernamelist(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PlayerList.playernamelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->playernamelist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.PlayerList)
}

::google::protobuf::uint8* PlayerList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.PlayerList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string playernamelist = 1;
  for (int i = 0, n = this->playernamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playernamelist(i).data(), static_cast<int>(this->playernamelist(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.PlayerList.playernamelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->playernamelist(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PlayerList)
  return target;
}

size_t PlayerList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PlayerList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string playernamelist = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->playernamelist_size());
  for (int i = 0, n = this->playernamelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->playernamelist(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PlayerList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PlayerList)
    MergeFrom(*source);
  }
}

void PlayerList::MergeFrom(const PlayerList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PlayerList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playernamelist_.MergeFrom(from.playernamelist_);
}

void PlayerList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerList::CopyFrom(const PlayerList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PlayerList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerList::IsInitialized() const {
  return true;
}

void PlayerList::Swap(PlayerList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerList::InternalSwap(PlayerList* other) {
  using std::swap;
  playernamelist_.InternalSwap(CastToBase(&other->playernamelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerList::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginBack::InitAsDefaultInstance() {
  ::pb::_LoginBack_default_instance_._instance.get_mutable()->playerlist_ = const_cast< ::pb::PlayerList*>(
      ::pb::PlayerList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginBack::kSuccFieldNumber;
const int LoginBack::kPlayerlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginBack::LoginBack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_LoginBack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.LoginBack)
}
LoginBack::LoginBack(const LoginBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerlist()) {
    playerlist_ = new ::pb::PlayerList(*from.playerlist_);
  } else {
    playerlist_ = NULL;
  }
  succ_ = from.succ_;
  // @@protoc_insertion_point(copy_constructor:pb.LoginBack)
}

void LoginBack::SharedCtor() {
  ::memset(&playerlist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&succ_) -
      reinterpret_cast<char*>(&playerlist_)) + sizeof(succ_));
}

LoginBack::~LoginBack() {
  // @@protoc_insertion_point(destructor:pb.LoginBack)
  SharedDtor();
}

void LoginBack::SharedDtor() {
  if (this != internal_default_instance()) delete playerlist_;
}

void LoginBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginBack::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginBack& LoginBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_LoginBack.base);
  return *internal_default_instance();
}


void LoginBack::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.LoginBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerlist_ != NULL) {
    delete playerlist_;
  }
  playerlist_ = NULL;
  succ_ = 0;
  _internal_metadata_.Clear();
}

bool LoginBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.LoginBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 succ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pb.PlayerList playerlist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.LoginBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.LoginBack)
  return false;
#undef DO_
}

void LoginBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.LoginBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->succ(), output);
  }

  // .pb.PlayerList playerlist = 2;
  if (this->has_playerlist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerlist(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.LoginBack)
}

::google::protobuf::uint8* LoginBack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.LoginBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->succ(), target);
  }

  // .pb.PlayerList playerlist = 2;
  if (this->has_playerlist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerlist(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.LoginBack)
  return target;
}

size_t LoginBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.LoginBack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .pb.PlayerList playerlist = 2;
  if (this->has_playerlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerlist_);
  }

  // int32 succ = 1;
  if (this->succ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->succ());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.LoginBack)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginBack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginBack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.LoginBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.LoginBack)
    MergeFrom(*source);
  }
}

void LoginBack::MergeFrom(const LoginBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.LoginBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerlist()) {
    mutable_playerlist()->::pb::PlayerList::MergeFrom(from.playerlist());
  }
  if (from.succ() != 0) {
    set_succ(from.succ());
  }
}

void LoginBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.LoginBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginBack::CopyFrom(const LoginBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.LoginBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginBack::IsInitialized() const {
  return true;
}

void LoginBack::Swap(LoginBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginBack::InternalSwap(LoginBack* other) {
  using std::swap;
  swap(playerlist_, other->playerlist_);
  swap(succ_, other->succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginBack::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameServerInfo::kCurloadFieldNumber;
const int GameServerInfo::kMaxloadFieldNumber;
const int GameServerInfo::kIPaddressFieldNumber;
const int GameServerInfo::kPortNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameServerInfo::GameServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_GameServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GameServerInfo)
}
GameServerInfo::GameServerInfo(const GameServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipaddress().size() > 0) {
    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  ::memcpy(&curload_, &from.curload_,
    static_cast<size_t>(reinterpret_cast<char*>(&portnum_) -
    reinterpret_cast<char*>(&curload_)) + sizeof(portnum_));
  // @@protoc_insertion_point(copy_constructor:pb.GameServerInfo)
}

void GameServerInfo::SharedCtor() {
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&curload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&portnum_) -
      reinterpret_cast<char*>(&curload_)) + sizeof(portnum_));
}

GameServerInfo::~GameServerInfo() {
  // @@protoc_insertion_point(destructor:pb.GameServerInfo)
  SharedDtor();
}

void GameServerInfo::SharedDtor() {
  ipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameServerInfo::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameServerInfo& GameServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_GameServerInfo.base);
  return *internal_default_instance();
}


void GameServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&curload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&portnum_) -
      reinterpret_cast<char*>(&curload_)) + sizeof(portnum_));
  _internal_metadata_.Clear();
}

bool GameServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GameServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 curload = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string IPaddress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.GameServerInfo.IPaddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 portNum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &portnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GameServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GameServerInfo)
  return false;
#undef DO_
}

void GameServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 curload = 1;
  if (this->curload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->curload(), output);
  }

  // int32 maxload = 2;
  if (this->maxload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxload(), output);
  }

  // string IPaddress = 3;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GameServerInfo.IPaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ipaddress(), output);
  }

  // int32 portNum = 4;
  if (this->portnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->portnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GameServerInfo)
}

::google::protobuf::uint8* GameServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GameServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 curload = 1;
  if (this->curload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->curload(), target);
  }

  // int32 maxload = 2;
  if (this->maxload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxload(), target);
  }

  // string IPaddress = 3;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.GameServerInfo.IPaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ipaddress(), target);
  }

  // int32 portNum = 4;
  if (this->portnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->portnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GameServerInfo)
  return target;
}

size_t GameServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GameServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string IPaddress = 3;
  if (this->ipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipaddress());
  }

  // int32 curload = 1;
  if (this->curload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curload());
  }

  // int32 maxload = 2;
  if (this->maxload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxload());
  }

  // int32 portNum = 4;
  if (this->portnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->portnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GameServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GameServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GameServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GameServerInfo)
    MergeFrom(*source);
  }
}

void GameServerInfo::MergeFrom(const GameServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GameServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipaddress().size() > 0) {

    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  if (from.curload() != 0) {
    set_curload(from.curload());
  }
  if (from.maxload() != 0) {
    set_maxload(from.maxload());
  }
  if (from.portnum() != 0) {
    set_portnum(from.portnum());
  }
}

void GameServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GameServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameServerInfo::CopyFrom(const GameServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GameServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameServerInfo::IsInitialized() const {
  return true;
}

void GameServerInfo::Swap(GameServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameServerInfo::InternalSwap(GameServerInfo* other) {
  using std::swap;
  ipaddress_.Swap(&other->ipaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(curload_, other->curload_);
  swap(maxload_, other->maxload_);
  swap(portnum_, other->portnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameServerInfo::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameServerInfoBack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameServerInfoBack::kSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameServerInfoBack::GameServerInfoBack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_GameServerInfoBack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GameServerInfoBack)
}
GameServerInfoBack::GameServerInfoBack(const GameServerInfoBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  succ_ = from.succ_;
  // @@protoc_insertion_point(copy_constructor:pb.GameServerInfoBack)
}

void GameServerInfoBack::SharedCtor() {
  succ_ = 0;
}

GameServerInfoBack::~GameServerInfoBack() {
  // @@protoc_insertion_point(destructor:pb.GameServerInfoBack)
  SharedDtor();
}

void GameServerInfoBack::SharedDtor() {
}

void GameServerInfoBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameServerInfoBack::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameServerInfoBack& GameServerInfoBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_GameServerInfoBack.base);
  return *internal_default_instance();
}


void GameServerInfoBack::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GameServerInfoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  succ_ = 0;
  _internal_metadata_.Clear();
}

bool GameServerInfoBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GameServerInfoBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 succ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GameServerInfoBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GameServerInfoBack)
  return false;
#undef DO_
}

void GameServerInfoBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GameServerInfoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->succ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GameServerInfoBack)
}

::google::protobuf::uint8* GameServerInfoBack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GameServerInfoBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->succ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GameServerInfoBack)
  return target;
}

size_t GameServerInfoBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GameServerInfoBack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 succ = 1;
  if (this->succ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->succ());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameServerInfoBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GameServerInfoBack)
  GOOGLE_DCHECK_NE(&from, this);
  const GameServerInfoBack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameServerInfoBack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GameServerInfoBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GameServerInfoBack)
    MergeFrom(*source);
  }
}

void GameServerInfoBack::MergeFrom(const GameServerInfoBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GameServerInfoBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.succ() != 0) {
    set_succ(from.succ());
  }
}

void GameServerInfoBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GameServerInfoBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameServerInfoBack::CopyFrom(const GameServerInfoBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GameServerInfoBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameServerInfoBack::IsInitialized() const {
  return true;
}

void GameServerInfoBack::Swap(GameServerInfoBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameServerInfoBack::InternalSwap(GameServerInfoBack* other) {
  using std::swap;
  swap(succ_, other->succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameServerInfoBack::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RequestIP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestIP::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestIP::RequestIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_RequestIP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RequestIP)
}
RequestIP::RequestIP(const RequestIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.RequestIP)
}

void RequestIP::SharedCtor() {
  id_ = 0;
}

RequestIP::~RequestIP() {
  // @@protoc_insertion_point(destructor:pb.RequestIP)
  SharedDtor();
}

void RequestIP::SharedDtor() {
}

void RequestIP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestIP::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestIP& RequestIP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_RequestIP.base);
  return *internal_default_instance();
}


void RequestIP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RequestIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

bool RequestIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RequestIP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RequestIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RequestIP)
  return false;
#undef DO_
}

void RequestIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RequestIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RequestIP)
}

::google::protobuf::uint8* RequestIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RequestIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RequestIP)
  return target;
}

size_t RequestIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RequestIP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RequestIP)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RequestIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RequestIP)
    MergeFrom(*source);
  }
}

void RequestIP::MergeFrom(const RequestIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RequestIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void RequestIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RequestIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestIP::CopyFrom(const RequestIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RequestIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestIP::IsInitialized() const {
  return true;
}

void RequestIP::Swap(RequestIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestIP::InternalSwap(RequestIP* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestIP::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResponseIP::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseIP::kIPaddressFieldNumber;
const int ResponseIP::kPortNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseIP::ResponseIP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_ResponseIP.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ResponseIP)
}
ResponseIP::ResponseIP(const ResponseIP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipaddress().size() > 0) {
    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  portnum_ = from.portnum_;
  // @@protoc_insertion_point(copy_constructor:pb.ResponseIP)
}

void ResponseIP::SharedCtor() {
  ipaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portnum_ = 0;
}

ResponseIP::~ResponseIP() {
  // @@protoc_insertion_point(destructor:pb.ResponseIP)
  SharedDtor();
}

void ResponseIP::SharedDtor() {
  ipaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseIP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResponseIP::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseIP& ResponseIP::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_ResponseIP.base);
  return *internal_default_instance();
}


void ResponseIP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ResponseIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portnum_ = 0;
  _internal_metadata_.Clear();
}

bool ResponseIP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ResponseIP)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string IPaddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ResponseIP.IPaddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 portNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &portnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ResponseIP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ResponseIP)
  return false;
#undef DO_
}

void ResponseIP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ResponseIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string IPaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ResponseIP.IPaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipaddress(), output);
  }

  // int32 portNum = 2;
  if (this->portnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->portnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ResponseIP)
}

::google::protobuf::uint8* ResponseIP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ResponseIP)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string IPaddress = 1;
  if (this->ipaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipaddress().data(), static_cast<int>(this->ipaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ResponseIP.IPaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ipaddress(), target);
  }

  // int32 portNum = 2;
  if (this->portnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->portnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ResponseIP)
  return target;
}

size_t ResponseIP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ResponseIP)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string IPaddress = 1;
  if (this->ipaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipaddress());
  }

  // int32 portNum = 2;
  if (this->portnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->portnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResponseIP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ResponseIP)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseIP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseIP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ResponseIP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ResponseIP)
    MergeFrom(*source);
  }
}

void ResponseIP::MergeFrom(const ResponseIP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ResponseIP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipaddress().size() > 0) {

    ipaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipaddress_);
  }
  if (from.portnum() != 0) {
    set_portnum(from.portnum());
  }
}

void ResponseIP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ResponseIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseIP::CopyFrom(const ResponseIP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ResponseIP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseIP::IsInitialized() const {
  return true;
}

void ResponseIP::Swap(ResponseIP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseIP::InternalSwap(ResponseIP* other) {
  using std::swap;
  ipaddress_.Swap(&other->ipaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(portnum_, other->portnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResponseIP::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttackRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttackRequest::kOffendernameFieldNumber;
const int AttackRequest::kAttackernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttackRequest::AttackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_AttackRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AttackRequest)
}
AttackRequest::AttackRequest(const AttackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offendername().size() > 0) {
    offendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offendername_);
  }
  attackername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attackername().size() > 0) {
    attackername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attackername_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.AttackRequest)
}

void AttackRequest::SharedCtor() {
  offendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attackername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AttackRequest::~AttackRequest() {
  // @@protoc_insertion_point(destructor:pb.AttackRequest)
  SharedDtor();
}

void AttackRequest::SharedDtor() {
  offendername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attackername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttackRequest::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttackRequest& AttackRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_AttackRequest.base);
  return *internal_default_instance();
}


void AttackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.AttackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attackername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AttackRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string offendername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offendername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->offendername().data(), static_cast<int>(this->offendername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.AttackRequest.offendername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attackername = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attackername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attackername().data(), static_cast<int>(this->attackername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.AttackRequest.attackername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AttackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AttackRequest)
  return false;
#undef DO_
}

void AttackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AttackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string offendername = 1;
  if (this->offendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offendername().data(), static_cast<int>(this->offendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.AttackRequest.offendername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->offendername(), output);
  }

  // string attackername = 2;
  if (this->attackername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attackername().data(), static_cast<int>(this->attackername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.AttackRequest.attackername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->attackername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.AttackRequest)
}

::google::protobuf::uint8* AttackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.AttackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string offendername = 1;
  if (this->offendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offendername().data(), static_cast<int>(this->offendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.AttackRequest.offendername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->offendername(), target);
  }

  // string attackername = 2;
  if (this->attackername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attackername().data(), static_cast<int>(this->attackername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.AttackRequest.attackername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->attackername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.AttackRequest)
  return target;
}

size_t AttackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.AttackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string offendername = 1;
  if (this->offendername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->offendername());
  }

  // string attackername = 2;
  if (this->attackername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attackername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.AttackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AttackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.AttackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.AttackRequest)
    MergeFrom(*source);
  }
}

void AttackRequest::MergeFrom(const AttackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.AttackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.offendername().size() > 0) {

    offendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offendername_);
  }
  if (from.attackername().size() > 0) {

    attackername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attackername_);
  }
}

void AttackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.AttackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackRequest::CopyFrom(const AttackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.AttackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackRequest::IsInitialized() const {
  return true;
}

void AttackRequest::Swap(AttackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttackRequest::InternalSwap(AttackRequest* other) {
  using std::swap;
  offendername_.Swap(&other->offendername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attackername_.Swap(&other->attackername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttackRequest::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttackResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttackResponse::kIssuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttackResponse::AttackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_AttackResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.AttackResponse)
}
AttackResponse::AttackResponse(const AttackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issucc_ = from.issucc_;
  // @@protoc_insertion_point(copy_constructor:pb.AttackResponse)
}

void AttackResponse::SharedCtor() {
  issucc_ = 0;
}

AttackResponse::~AttackResponse() {
  // @@protoc_insertion_point(destructor:pb.AttackResponse)
  SharedDtor();
}

void AttackResponse::SharedDtor() {
}

void AttackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttackResponse::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttackResponse& AttackResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_AttackResponse.base);
  return *internal_default_instance();
}


void AttackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.AttackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issucc_ = 0;
  _internal_metadata_.Clear();
}

bool AttackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.AttackResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 issucc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &issucc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.AttackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.AttackResponse)
  return false;
#undef DO_
}

void AttackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.AttackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 issucc = 1;
  if (this->issucc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->issucc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.AttackResponse)
}

::google::protobuf::uint8* AttackResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.AttackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 issucc = 1;
  if (this->issucc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->issucc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.AttackResponse)
  return target;
}

size_t AttackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.AttackResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 issucc = 1;
  if (this->issucc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->issucc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.AttackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AttackResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttackResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.AttackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.AttackResponse)
    MergeFrom(*source);
  }
}

void AttackResponse::MergeFrom(const AttackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.AttackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issucc() != 0) {
    set_issucc(from.issucc());
  }
}

void AttackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.AttackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackResponse::CopyFrom(const AttackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.AttackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackResponse::IsInitialized() const {
  return true;
}

void AttackResponse::Swap(AttackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttackResponse::InternalSwap(AttackResponse* other) {
  using std::swap;
  swap(issucc_, other->issucc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttackResponse::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Chat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chat::kMsgFieldNumber;
const int Chat::kReceivernameFieldNumber;
const int Chat::kSendernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chat::Chat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_Chat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Chat)
}
Chat::Chat(const Chat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  receivername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.receivername().size() > 0) {
    receivername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receivername_);
  }
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendername().size() > 0) {
    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.Chat)
}

void Chat::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receivername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Chat::~Chat() {
  // @@protoc_insertion_point(destructor:pb.Chat)
  SharedDtor();
}

void Chat::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receivername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Chat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Chat::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Chat& Chat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_Chat.base);
  return *internal_default_instance();
}


void Chat::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receivername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Chat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Chat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Chat.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string receivername = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receivername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receivername().data(), static_cast<int>(this->receivername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Chat.receivername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendername = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendername().data(), static_cast<int>(this->sendername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Chat.sendername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Chat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Chat)
  return false;
#undef DO_
}

void Chat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  // string receivername = 2;
  if (this->receivername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receivername().data(), static_cast<int>(this->receivername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.receivername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receivername(), output);
  }

  // string sendername = 3;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.sendername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sendername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Chat)
}

::google::protobuf::uint8* Chat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Chat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  // string receivername = 2;
  if (this->receivername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receivername().data(), static_cast<int>(this->receivername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.receivername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->receivername(), target);
  }

  // string sendername = 3;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Chat.sendername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sendername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Chat)
  return target;
}

size_t Chat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Chat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string receivername = 2;
  if (this->receivername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receivername());
  }

  // string sendername = 3;
  if (this->sendername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Chat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  const Chat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Chat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Chat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Chat)
    MergeFrom(*source);
  }
}

void Chat::MergeFrom(const Chat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Chat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.receivername().size() > 0) {

    receivername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receivername_);
  }
  if (from.sendername().size() > 0) {

    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
}

void Chat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chat::CopyFrom(const Chat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Chat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chat::IsInitialized() const {
  return true;
}

void Chat::Swap(Chat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chat::InternalSwap(Chat* other) {
  using std::swap;
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  receivername_.Swap(&other->receivername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendername_.Swap(&other->sendername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Chat::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChatBack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatBack::kSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatBack::ChatBack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_ChatBack.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ChatBack)
}
ChatBack::ChatBack(const ChatBack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  succ_ = from.succ_;
  // @@protoc_insertion_point(copy_constructor:pb.ChatBack)
}

void ChatBack::SharedCtor() {
  succ_ = 0;
}

ChatBack::~ChatBack() {
  // @@protoc_insertion_point(destructor:pb.ChatBack)
  SharedDtor();
}

void ChatBack::SharedDtor() {
}

void ChatBack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChatBack::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatBack& ChatBack::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_ChatBack.base);
  return *internal_default_instance();
}


void ChatBack::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ChatBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  succ_ = 0;
  _internal_metadata_.Clear();
}

bool ChatBack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ChatBack)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 succ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ChatBack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ChatBack)
  return false;
#undef DO_
}

void ChatBack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ChatBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->succ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ChatBack)
}

::google::protobuf::uint8* ChatBack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ChatBack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 succ = 1;
  if (this->succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->succ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ChatBack)
  return target;
}

size_t ChatBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ChatBack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 succ = 1;
  if (this->succ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->succ());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChatBack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ChatBack)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatBack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatBack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ChatBack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ChatBack)
    MergeFrom(*source);
  }
}

void ChatBack::MergeFrom(const ChatBack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ChatBack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.succ() != 0) {
    set_succ(from.succ());
  }
}

void ChatBack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ChatBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatBack::CopyFrom(const ChatBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ChatBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatBack::IsInitialized() const {
  return true;
}

void ChatBack::Swap(ChatBack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatBack::InternalSwap(ChatBack* other) {
  using std::swap;
  swap(succ_, other->succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChatBack::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReceiveChat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceiveChat::kSendernameFieldNumber;
const int ReceiveChat::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceiveChat::ReceiveChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_allmsg_2eproto::scc_info_ReceiveChat.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReceiveChat)
}
ReceiveChat::ReceiveChat(const ReceiveChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendername().size() > 0) {
    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.ReceiveChat)
}

void ReceiveChat::SharedCtor() {
  sendername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReceiveChat::~ReceiveChat() {
  // @@protoc_insertion_point(destructor:pb.ReceiveChat)
  SharedDtor();
}

void ReceiveChat::SharedDtor() {
  sendername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReceiveChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReceiveChat::descriptor() {
  ::protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReceiveChat& ReceiveChat::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_allmsg_2eproto::scc_info_ReceiveChat.base);
  return *internal_default_instance();
}


void ReceiveChat::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReceiveChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sendername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReceiveChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReceiveChat)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sendername = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendername().data(), static_cast<int>(this->sendername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReceiveChat.sendername"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ReceiveChat.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReceiveChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReceiveChat)
  return false;
#undef DO_
}

void ReceiveChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReceiveChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sendername = 1;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReceiveChat.sendername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sendername(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReceiveChat.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReceiveChat)
}

::google::protobuf::uint8* ReceiveChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReceiveChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sendername = 1;
  if (this->sendername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendername().data(), static_cast<int>(this->sendername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReceiveChat.sendername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sendername(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ReceiveChat.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReceiveChat)
  return target;
}

size_t ReceiveChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReceiveChat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sendername = 1;
  if (this->sendername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendername());
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReceiveChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReceiveChat)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiveChat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReceiveChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReceiveChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReceiveChat)
    MergeFrom(*source);
  }
}

void ReceiveChat::MergeFrom(const ReceiveChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReceiveChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sendername().size() > 0) {

    sendername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendername_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void ReceiveChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReceiveChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiveChat::CopyFrom(const ReceiveChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReceiveChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveChat::IsInitialized() const {
  return true;
}

void ReceiveChat::Swap(ReceiveChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceiveChat::InternalSwap(ReceiveChat* other) {
  using std::swap;
  sendername_.Swap(&other->sendername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReceiveChat::GetMetadata() const {
  protobuf_allmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_allmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Login* Arena::CreateMaybeMessage< ::pb::Login >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RequestList* Arena::CreateMaybeMessage< ::pb::RequestList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RequestList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::PlayerList* Arena::CreateMaybeMessage< ::pb::PlayerList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::PlayerList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::LoginBack* Arena::CreateMaybeMessage< ::pb::LoginBack >(Arena* arena) {
  return Arena::CreateInternal< ::pb::LoginBack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GameServerInfo* Arena::CreateMaybeMessage< ::pb::GameServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GameServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GameServerInfoBack* Arena::CreateMaybeMessage< ::pb::GameServerInfoBack >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GameServerInfoBack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RequestIP* Arena::CreateMaybeMessage< ::pb::RequestIP >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RequestIP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ResponseIP* Arena::CreateMaybeMessage< ::pb::ResponseIP >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ResponseIP >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::AttackRequest* Arena::CreateMaybeMessage< ::pb::AttackRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pb::AttackRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::AttackResponse* Arena::CreateMaybeMessage< ::pb::AttackResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pb::AttackResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Chat* Arena::CreateMaybeMessage< ::pb::Chat >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Chat >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ChatBack* Arena::CreateMaybeMessage< ::pb::ChatBack >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ChatBack >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::ReceiveChat* Arena::CreateMaybeMessage< ::pb::ReceiveChat >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReceiveChat >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
